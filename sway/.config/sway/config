#############
# Variables #
#############

# set the mod key to the winkey:
set $mod Mod4

# Font (pango)
set $fontName FiraCode Nerd Font
set $fontStyle Regular
set $fontSize 14

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term foot

# Your preferred application launcher
set $menu wofi -c ~/.config/wofi/config -I

set $powermenu ~/.config/sway/scripts/power-menu.sh


###################
# Workspace Rules #
###################

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# bind program to workspace:
assign [class="VSCodium"]     2
# assign [app_id="(?i)firefox"]  3
assign [class="Slack"]        4
assign [app_id="thunar"]      4


###############
# Focus rules #
###############

for_window [class=VSCodium]     focus
# for_window [app_id=(?i)firefox]  focus
for_window [class=Slack]        focus
for_window [app_id="thunar"]    focus
for_window [app_id="xed"]       focus


##################
# Floating rules #
##################

# set floating (nontiling)for apps needing it:
for_window [class="Yad" instance="yad"] floating enable
for_window [app_id="yad"] floating enable
for_window [app_id="blueman-manager"] floating enable,  resize set width 40 ppt height 80 ppt

# set floating (nontiling) for special apps:
for_window [class="Xsane" instance="xsane"] floating enable
for_window [app_id="pavucontrol" ] floating enable, resize set width 40 ppt height 70 ppt
for_window [class="qt5ct" instance="qt5ct"] floating enable, resize set width 60 ppt height 50 ppt
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [app_id="pamac-manager"] floating enable, resize set width 80 ppt height 70 ppt
for_window [class="Lxappearance"] floating enable, resize set width 60 ppt height 50 ppt

# set floating for window roles
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [window_role="About"] floating enable
for_window [title="File Operation Progress"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt
for_window [app_id="firefox" title="^Library$"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt
for_window [app_id="floating_shell_portrait"] floating enable, border pixel 1, sticky enable, resize set width 30 ppt height 40 ppt
for_window [title="Picture in picture"] floating enable, sticky enable
for_window [app_id="xsensors"] floating enable
for_window [title="Save File"] floating enable
for_window [app_id="firefox" title="Firefox â€” Sharing Indicator"] kill

# Inhibit idle
for_window [app_id="firefox"] inhibit_idle fullscreen
for_window [app_id="Chromium"] inhibit_idle fullscreen


######################################
# keybindings for different actions: #
######################################

# Start a terminal
bindsym $mod+Return exec $term

# Start Browser
bindsym $mod+w exec $BROWSER

# Launch Thunar
bindsym $mod+n exec thunar

# Start your launcher
bindsym $mod+d exec $menu

# Screenshot
# @adastx, you can use wl-copy for copying, as example:
# wl-copy < $(grimshot save area 123.png)
bindsym print exec wl-copy < $(/usr/share/sway/scripts/grimshot --notify save output)
bindsym Shift+print exec ~/.config/sway/scripts/screenshot.sh

# exit-menu
bindsym $mod+x exec ~/.config/sway/scripts/power-menu.sh

# calculator
bindsym $mod+c exec ~/.config/sway/scripts/qalculate.sh

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# activities
bindsym $mod+p exec ~/.config/sway/scripts/windows.py

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# kill focused window
bindsym $mod+q kill

# reload the configuration file
bindsym $mod+Shift+r reload

# restart i3 inplace (preserves your layout/session, can be used to update i3)
# bindsym $mod+Shift+r restart

# Move your focus around
bindsym $mod+$left          focus left
bindsym $mod+$down          focus down
bindsym $mod+$up            focus up
bindsym $mod+$right         focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left           focus left
bindsym $mod+Down           focus down
bindsym $mod+Up             focus up
bindsym $mod+Right          focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left    move left
bindsym $mod+Shift+$down    move down
bindsym $mod+Shift+$up      move up
bindsym $mod+Shift+$right   move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left     move left
bindsym $mod+Shift+Down     move down
bindsym $mod+Shift+Up       move up
bindsym $mod+Shift+Right    move right


#################
# Layout Stuff: #
#################

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+s layout toggle split

# toggle tiling / floating
bindsym $mod+Tab floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+Tab focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show


###################
# Resize windows: #
###################

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left   resize shrink   width   5px or 5ppt
    bindsym $down   resize grow     height  5px or 5ppt
    bindsym $up     resize shrink   height  5px or 5ppt
    bindsym $right  resize grow     width   5px or 5ppt

    # Ditto, with arrow keys
    bindsym Left    resize shrink   width   5px or 5ppt
    bindsym Down    resize grow     height  5px or 5ppt
    bindsym Up      resize shrink   height  5px or 5ppt
    bindsym Right   resize grow     width   5px or 5ppt

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


####################
# Multimedia Keys: #
####################

# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")

# Control volume directly trough pactl
bindsym --locked XF86AudioRaiseVolume exec $volume_up
bindsym --locked XF86AudioLowerVolume exec $volume_down
bindsym --locked XF86AudioMute exec $volume_mute

# audio control
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Redirect sound to headphones
# bindsym $mod+p exec /usr/local/bin/switch-audio-port

# Backlight control
# "scale=2 ; $var1 / $var2" | bc
# echo "function1_output / function2_output" | bc
bindsym XF86MonBrightnessUp   exec brightnessctl s +1 && notify-send "Brightness - $(brightnessctl -m | cut -d , -f 4)" -t 500
bindsym XF86MonBrightnessDown exec brightnessctl s 1- && notify-send "Brightness - $(brightnessctl -m | cut -d , -f 4)" -t 500


##############################
# extra options for windows: #
##############################

# Apply gtk theming
exec_always ~/.config/sway/scripts/import-gsettings.sh

### GTK/Font/Icons

# set $gnome-schema org.gnome.desktop.interface

#  exec_always {
#         gsettings set $gnome-schema gtk-theme 'Catppuccin-Mocha-Standard-Pink-Dark'
#         gsettings set $gnome-schema icon-theme 'Papirus-Dark'
#         gsettings set $gnome-schema font-name 'jetbrains mono nerd font 12'
#     }

# Set inner/outer gaps
gaps inner 5
gaps outer 0
smart_gaps on

# border indicator on windows:
# default_border pixel 1
smart_borders on

# Thin borders
# hide_edge_borders both

# Default Font
font pango:$fontName $fontStyle $fontSize

for_window [class=".*"] border pixel 2
default_floating_border none

# window title alignment
title_align center

# Disable focus on hover
focus_follows_mouse no

### Idle configuration
exec swayidle -w\
    timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
    timeout 770 'swaymsg "output * power off"' \
    resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -C ~/.config/swaylock/config'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Clamshell Mode
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

exec_always ~/.config/sway/scripts/clamshell.sh


######################################
# color settings for bar and windows #
######################################

include catpuccin-mocha

# target                 title     bg    text   indicator  border
client.focused           $pink     $base $text  $rosewater $pink
client.focused_inactive  $mauve    $base $text  $rosewater $base
client.unfocused         $mauve    $base $text  $rosewater $base
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

bar {
	swaybar_command waybar
}

include /etc/sway/config.d/*


#############################################
# autostart applications/services on login: #
#############################################

# Auth with polkit-gnome:
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Desktop notifications
exec mako

# Network Applet
exec nm-applet --indicator

# start blueberry app for managing bluetooth devices from tray:
exec --no-startup-id blueman-applet

# Start IME
exec --no-startup-id fcitx5 -d

# GTK3 applications take a long time to start
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
     
# Welcome App
# exec dex -a -s /etc/xdg/autostart/:~/.config/autostart/  

# Sway Fader
# exec python3 ~/.config/sway/scripts/swayfader.py      

# Output configuration. Get output codes using `sway-msg -t get_outputs`
# output * resolution 1920x1080 position 1920,0

# Wallpaper
set $wallpapers $HOME/.local/share/wallpapers
output * bg $(find $wallpapers -maxdepth 1 -type f -regex \".*\(jpg\|jpeg\|png\)\" | shuf -n1) fill

# Input configuration
#
# Example configuration:
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Put your touchpad's ID to replace "Touchpad-ID" (keep the quotation marks)

input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll disabled
}

# Read `man 5 sway-input` for more information about this section.
#
input type:keyboard xkb_layout "us"

exec_always {
    'swaymsg input type:keyboard xkb_layout "$(localectl status | grep "X11 Layout" | sed -e "s/^.*X11 Layout://")"'
    'swaymsg input type:keyboard xkb_variant "$(localectl status | grep "X11 Variant" | sed -e "s/^.*X11 Variant://")"'
}
